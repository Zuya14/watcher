【watcher.exe】
対象ファイルを監視し、対象ファイルの更新があった場合に
指定したディレクトリへコピーするプログラム。
発行元を設定していないため、実行時に不明な発行元と表示されるかも。

対象ファイルの更新ごとにコピー処理が発生。margin_time[ms]以下での更新は同一の更新とみなして上書き。
処理が非効率的なのでwatcher2.exeの方を使用推奨。

【watcher2.exe】
watcher.exeの改良版
全ての対象ファイルがほぼ同時刻に更新されることを前提としている。
全ての対象ファイルの更新時間を監視。
過去の更新時間からmargin_time[ms]経過した場合、更新処理が終わったとみなして全ての対象ファイルを一括コピー。

【file_path_list.txt フォーマット】
<監視対象ファイル1 絶対パス>
<監視対象ファイル2 絶対パス>
<監視対象ファイル3 絶対パス>
<以下、同様...>

※作成済みファイルの更新時に作動。
  新規ファイルの作成時は未確認。
  監視対象ファイルは全て同一ディレクトリ下であること。

【parameter.csv フォーマット】
copy_path,   <相対パス>
check_time,  <整数値[ms]>
margin_time, <整数値[ms]>
finish_wait, <整数値[ms]>
start_deg,   <整数値[deg]>
end_deg,     <整数値[deg] (>=start_deg)>
deg_step,    <整数値[deg]>
repeat,      <整数値[回] (>=1)>
restart,     <0/1>

※copy_pathはwatcher.exeを実行しているcurrent directoryを基準としている（はず）。

※check_timeは監視対象ファイルの更新を確認する時間間隔

※margin_timeは以前のファイル更新がmargin_time以内に行われていた場合に、それらを同一の更新とみなす。
  1回のファイル更新で複数回の更新が検知されてしまう問題の対処用。
  検知される複数回の更新が回数も時間間隔もかなりぶれるため、margin_timeを過信しないこと。しばしば誤検知します。
  また、ファイルコピー処理中に撮像処理が始まるとタイムアウトエラーになるようなのでJOB側でも調整が必要。

※finish_waitは最後の更新の終了を確実にするための余裕時間

※repeatは連続して計測を行う回数。複数回の回転を計測する場合に使用。
  2以上の場合、copy_path以下に測定回数を名前とするディレクトリを作成。

※restartは計測終了時に再起動するか否か(0/1はtrue/falseに対応)。
  restart=1に設定した場合は実行終了時は強制終了で。
  再起動時に自動的にcopy_pathのナンバリングがインクリメントされます。
  (parameter.csvのcopy_pathが「*_01」のように「_」の後でナンバリングされている前提)